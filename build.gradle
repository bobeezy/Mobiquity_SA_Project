buildscript {

    println('-' * 80)
    println "Running gradle version: $gradle.gradleVersion"
    println('Environment variables at startup:')
    System.env.each { k, v ->
        println("$k = $v")
    }
    println('-' * 80)

    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral() //Repository is needed for downloading allure-commandline for building the report
        jcenter()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.8.1"//Allure settings
    }
}

plugins {
    id 'java' //Apply the java plugin to add support for Java
    id 'net.researchgate.release' version '2.6.0'
    id "com.jfrog.bintray" version "1.8.4"
    id 'application' //Apply the application plugin to add support for building a CLI application in Java
}

group 'org.mobiquity_project'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'

description = 'Allure Rest-assured' //Allure settings

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://dl.bintray.com/epam/reportportal"
    }
    maven {
        url "https://jitpack.io"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.jfrog.bintray'
apply plugin:  'net.researchgate.release'
apply plugin: 'io.qameta.allure' //Allure settings
apply plugin: 'build-dashboard' //Allure settings

sourceSets {
    main {
        java {
            srcDirs = ["src"]
        }
    }
    test {
        java {
            srcDir 'src/test/java/'
        }
        resources {
            srcDir '/src/main/resources'
        }
    }
}

configurations {
    agent
    testImplementation
    testCompile
}

configurations.all {
    exclude module: 'logback-classic'
    exclude module: 'slf4j-log4j12'  //To remove "SLF4J: Class path contains multiple SLF4J bindings." error message
}

test {
    testLogging {
        showStandardStreams = true
    }
}

allure {  //Allure settings
    version = '2.14.0'
    autoconfigure = true
    aspectjweaver = true
    allureJavaVersion = '2.14.0'
}

dependencies {
    //Allure Report
    implementation group: 'io.qameta.allure', name: 'allure-testng', version: '2.14.0'
    implementation group: 'io.qameta.allure', name: 'allure-rest-assured', version: '2.14.0'

    //Allure utils
    implementation 'io.rest-assured:rest-assured:3.0.2'
    implementation group: 'ru.yandex.qatools.allure', name: 'allure-java-annotations', version: '1.5.4' //Allure Java Annotations
    implementation group: 'ru.yandex.qatools.allure', name: 'allure-report-data', version: '1.5.4' //Allure Report Data
    implementation group: 'ru.yandex.qatools.allure', name: 'allure-testng-adaptor', version: '1.5.4' //Allure TestNG Adaptor

    //Apache POI
    implementation group: 'org.apache.poi', name: 'poi', version: '5.0.0' //To read files from excel sheets
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.0.0'

    //Google API
    implementation group: 'com.google.gdata', name: 'core', version: '1.47.1' //Google Data Java Client Library

    //GSON
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.7'

    //Hamcrest
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'

    //JSON
    implementation group: 'org.json', name: 'json', version: '20210307'
    implementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.6.0'
    implementation group: 'org.apache.clerezza.ext', name: 'org.json.simple', version: '0.4'

    //Jxl (JExcelApi)
    implementation group: 'net.sourceforge.jexcelapi', name: 'jxl', version: '2.6.12' //To read, write, and modify Microsoft Excel spreadsheets

    //Rest Assured
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '4.4.0'

    //TestNG
    testImplementation group: 'org.testng', name: 'testng', version: '7.6.1'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.20.2'
    testImplementation group: 'org.assertj', name: 'assertj-core-java8', version: '1.0.0m1' //AssertJ Fluent Assertions For Java 8
}

tasks.withType(Test) {
    systemProperty 'allure.results.directory', 'build/allure-results' //Allure settings
    gradle.startParameter.continueOnFailure = true
    systemProperties = System.getProperties()
    testLogging.events "started", "passed", "skipped", "failed", "standardOut", "standardError"
    System.setProperty("org.apache.commons.logging.Log", "org.apache.commons.logging.impl.Jdk14Logger")
    testLogging.exceptionFormat "full"
    testLogging.showStandardStreams = true
}

task run_mobiquity_test(type: Test) {
    useTestNG() {
        useDefaultListeners = true
        suites '/src/main/resources/testSuites/MobiquityPositiveTestSuite.xml'
        suites '/src/main/resources/testSuites/MobiquitySearchUserNegativeTestSuite.xml'
        suites '/src/main/resources/testSuites/MobiquitySearchUserPostsNegativeTestSuite.xml'
        suites '/src/main/resources/testSuites/MobiquitySearchUserCommentsNegativeTestSuite.xml'
    }
}

task run_regression_test(type: Test) {
    useTestNG() {
        useDefaultListeners = true // To generate reports by TestNG library
        suites 'src/main/resources/testSuites/regressionTestSuite.xml'
    }
}